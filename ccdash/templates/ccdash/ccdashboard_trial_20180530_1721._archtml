{% extends "base.html" %} {% load staticfiles %} {% block title %}Dashboard{% endblock %} 
{% block custcss %} 
<style>
 .panel--dash--correction {
  padding-bottom: 0cm;
}  

.content--group--correction {
    margin-bottom:  0;
} 

</style>
<link rel="stylesheet" href="{% static 'assets/js/print/print.css' %}">


{% endblock %} {% block main_content %}




<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-flat" id="bob1">
            <div class="panel-heading">
                <h6 class="panel-title">Hierarchy Level Heatmap</h6>
            </div>
            <div class="container-fluid">
                <div class="row">
                    <div class="col-lg-6">
                        <div class="col-lg-10 col-lg-offset-1" id="chart_1_responsive">
                            <div class="content-group" id="chart_1"></div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="col-lg-10 col-lg-offset-1" id="chart_2_responsive">
                            <div class="content-group" id="chart_2"></div>
                        </div>
                    </div>
                    <!--div class="col-lg-4">
                        <div class="col-lg-10 col-lg-offset-1">
                            <div class="content-group" id="new-sessions"></div>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="col-lg-10 col-lg-offset-1">
                            <div class="content-group" id="total-online"></div>
                        </div>
                    </div-->
                </div>
            </div>
            <!--div class="position-relative" id="render_dash"></div-->
        </div>
    </div>
</div>






{% endblock %}
<!--Parent core js override-->
{% block chartcode%}
<script type="text/javascript" src="{% static 'assets/js/base/vega/vega.js' %}"></script>
<script type="text/javascript">
    //var view;

var spec = {
  "$schema": "{% static 'assets/js/base/vega/vega-schema.json' %}",
  "width": 200,
  "height": 200,

  "data": [
    {
      "name": "table",
      "values": [12, 23, 47, 6, 52, 19],
      "transform": [{"type": "pie", "field": "data"}]
    }
  ],

  "signals": [
      {
      "name": "width",
      "value": "",
      "on": [
        {
          "events": {
            "source": "window",
            "type": "resize"
          },
          "update": "containerSize()[0]*0.95"
        }
      ]
    },
    {
      "name": "height",
      "value": "",
      "on": [
        {
          "events": {
            "source": "window",
            "type": "resize"
          },
          "update": "containerSize()[1]*0.95"
        }
      ]
    }
  ],

  "scales": [
    {
      "name": "r",
      "type": "sqrt",
      "domain": {"data": "table", "field": "data"},
      "zero": true,
      "range": [
        {
          "signal": "width*0.03"
        },
        {
          "signal": "width*0.50"
        }
      ]
    }
  ],

  "marks": [
    {
      "type": "arc",
      "from": {"data": "table"},
      "encode": {
        "update": {
          "x": {"signal": "width / 2"},
          "y": { "signal": "height / 2"},
          "startAngle": {"field": "startAngle"},
          "endAngle": {"field": "endAngle"},
          "outerRadius": {"scale": "r", "field": "data"},
          "stroke": {"value": "#fff"},
          "fill": {"value": "#ccc"}
        },
       
        "hover": {
          "fill": {"value": "pink"}
        }
      }
    }
  ]
}
;

var view = new vega.View(vega.parse(spec))
  .renderer('canvas') // set renderer (canvas or svg)
  .initialize('#chart_1') // initialize view within parent DOM container
  .hover() // enable hover encode set processing
  .run(); // run the dataflow and render the view  

//var state = view.getState();
//console.log(JSON.stringify(state));
var widthListener = view.addSignalListener('width', function(name, value) {
  console.log(name + ': ' + value);
});


$(function() {
  $("#chart_1_responsive").resizable({
    handles: "n, e, s, w",
    minHeight: 150,
    minWidth: 250,
    resize: function(event, ui) {
      view.signal('width', ui.size.width - 50)
          .signal('height', ui.size.height - 50)
          .run('enter');
}



  })
});

  </script> 
<script type="text/javascript">
    //var view;

var spec2 = {
  "$schema": "{% static 'assets/js/base/vega/vega-schema.json' %}",
  "width": 200,
  "height": 200,

  "data": [
    {
      "name": "table",
      "values": [19, 33, 5, 123, 98, 3],
      "transform": [{"type": "pie", "field": "data"}]
    }
  ],

  "signals": [
      {
      "name": "width",
      "value": "",
      "on": [
        {
          "events": {
            "source": "window",
            "type": "resize"
          },
          "update": "containerSize()[0]*0.95"
        }
      ]
    },
    {
      "name": "height",
      "value": "",
      "on": [
        {
          "events": {
            "source": "window",
            "type": "resize"
          },
          "update": "containerSize()[1]*0.95"
        }
      ]
    }
  ],

  "scales": [
    {
      "name": "r",
      "type": "sqrt",
      "domain": {"data": "table", "field": "data"},
      "zero": true,
      "range": [
        {
          "signal": "width*0.03"
        },
        {
          "signal": "width*0.50"
        }
      ]
    }
  ],

  "marks": [
    {
      "type": "arc",
      "from": {"data": "table"},
      "encode": {
        "update": {
          "x": {"signal": "width / 2"},
          "y": { "signal": "height / 2"},
          "startAngle": {"field": "startAngle"},
          "endAngle": {"field": "endAngle"},
          "outerRadius": {"scale": "r", "field": "data"},
          "stroke": {"value": "#fff"},
          "fill": {"value": "#ccc"}
        },
       
        "hover": {
          "fill": {"value": "pink"}
        }
      }
    }
  ]
}
;

var view = new vega.View(vega.parse(spec2))
  .renderer('canvas') // set renderer (canvas or svg)
  .initialize('#chart_2') // initialize view within parent DOM container
  .hover() // enable hover encode set processing
  .run(); // run the dataflow and render the view  

//var state = view.getState();
//console.log(JSON.stringify(state));
var widthListener = view.addSignalListener('width', function(name, value) {
  console.log(name + ': ' + value);
});


$(function() {
  $("#chart_2_responsive").resizable({
    handles: "n, e, s, w",
    minHeight: 150,
    minWidth: 250,
    resize: function(event, ui) {
      view.signal('width', ui.size.width - 50)
          .signal('height', ui.size.height - 50)
          .run('enter');
}



  })
});

  </script> 
{% endblock %}